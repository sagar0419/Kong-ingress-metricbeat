#Kong Service
#It will create a service in kong namespace and service will expose kong metrics. Later this metrics will get fetched by Metricbeat and send to elasticsearch for the visualization using kibana.
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ingress-kong
  name: ingress-kong
  namespace: kong
spec:
  ports:
  - port: 8100
    protocol: TCP
    targetPort: 8100
  selector:
    app: ingress-kong
  type: ClusterIP

#Metricbeat Manifest
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-config
  namespace: kube-system
  labels:
    k8s-app: metricbeat
data:
  metricbeat.yml: |-
    metricbeat.config.modules:
      # Mounted `metricbeat-daemonset-modules` configmap:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
    setup.timeseries.enabled: true
    setup.template.json.data_stream: false

#ConfigMap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-modules
  namespace: kube-system
  labels:
    k8s-app: metricbeat
data:
  prometheus.yml: |-
    - module: prometheus
      period: 10s
      metricsets: ["collector"]
      hosts: ["ingress-kong.kong:8100"]
      metrics_path: /metrics
      headers:
        accept: "text/plain"

---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: metricbeat
  namespace: kube-system
  labels:
    k8s-app: metricbeat
spec:
  selector:
    matchLabels:
      k8s-app: metricbeat
  template:
    metadata:
      labels:
        k8s-app: metricbeat
    spec:
      serviceAccountName: metricbeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:8.2.2
        args: [
          "-c", "/etc/metricbeat.yml",
           ]
        env:
        - name: ELASTICSEARCH_HOST
          value: 192.168.1.192  #change the value  to your host Ip address or DNS
        - name: ELASTICSEARCH_PORT
          value: "9200"                            #Add the port on which your service is exposed.
        - name: ELASTICSEARCH_USERNAME
          value: elastic                    #Username of elasticsearch. If you are not using any security leave it blank.
        - name: ELASTICSEARCH_PASSWORD
          value: "sagarparmar"    #Passwd of elasticsearch. If you are not using any security leave it blank.
        - name: ELASTIC_CLOUD_ID            
          value: ""
        - name: ELASTIC_CLOUD_AUTH
          value: ""
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: data
          mountPath: /usr/share/metricbeat/data
        - name: modules
          mountPath: /usr/share/metricbeat/modules.d
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0640
          name: metricbeat-daemonset-config
      - name: modules
        configMap:
          defaultMode: 0640
          name: metricbeat-daemonset-modules
      - name: data
        hostPath:
          # When metricbeat runs as non-root user, this directory needs to be writable by group (g+w)
          path: /var/lib/metricbeat-data
          type: DirectoryOrCreate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: kube-system
  labels:
    k8s-app: metricbeat
---
